{"ast":null,"code":"var _jsxFileName = \"/Users/ajaysaini/Documents/GitHub/crypto-investment-dev/src/component/Table/Table.jsx\";\nimport React from 'react';\nimport TableBodyCell from './TableBodyCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Table({\n  columns,\n  data,\n  addClassToLastCell = true\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table align-middle m-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((name, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, rowIndex) => {\n          const isDeposited = row[row.length - 1] === \"INR Deposited\";\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(TableBodyCell, {\n              coinName: row[0],\n              coinType: row[0],\n              CoinImg: \"../../assets/img/doge.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), row.slice(1).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: addClassToLastCell && cellIndex === row.length - 2 ? isDeposited ? \"text-theme3\" : \"text-theme4\" : \"\",\n              children: cell\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this))]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","TableBodyCell","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","columns","data","addClassToLastCell","children","className","map","name","index","scope","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","isDeposited","length","coinName","coinType","CoinImg","slice","cell","cellIndex","_c","$RefreshReg$"],"sources":["/Users/ajaysaini/Documents/GitHub/crypto-investment-dev/src/component/Table/Table.jsx"],"sourcesContent":["import React from 'react';\r\nimport TableBodyCell from './TableBodyCell';\r\n\r\nfunction Table({ columns, data, addClassToLastCell = true }) { \r\n    return (\r\n        <>\r\n            <table className=\"table align-middle m-0\">\r\n                <thead>\r\n                    <tr>\r\n                        {columns.map((name, index) => (\r\n                            <th key={index} scope=\"col\">{name}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* {data.map((row, rowIndex) => (\r\n                        <tr key={rowIndex}>\r\n                            <TableBodyCell coinName={row[0]} coinType={row[0]} CoinImg='../../assets/img/doge.png' />\r\n                            {row.slice(1).map((cell, cellIndex) => (\r\n                                <td key={cellIndex}>{cell}</td>\r\n                            ))\r\n                            }       \r\n                        </tr>\r\n                    ))} */}\r\n                    {/* {data.map((row, rowIndex) => {\r\n                    const isDeposited = row[row.length - 1] === \"INR Deposited\";\r\n                    return (\r\n                        <tr key={rowIndex}>\r\n                            <TableBodyCell coinName={row[0]} coinType={row[0]} CoinImg='../../assets/img/doge.png' />\r\n                            {row.slice(1).map((cell, cellIndex) => (\r\n                                <td key={cellIndex} className={cellIndex === row.length - 2 ? (isDeposited ? \"text-theme3\" : \"text-theme4\") : \"\"}>{cell}</td>\r\n                            ))}\r\n                        </tr>\r\n                    );\r\n                })} */}\r\n                    {data.map((row, rowIndex) => {\r\n                        const isDeposited = row[row.length - 1] === \"INR Deposited\";\r\n                        return (\r\n                            <tr key={rowIndex}>\r\n                                <TableBodyCell coinName={row[0]} coinType={row[0]} CoinImg='../../assets/img/doge.png' />\r\n                                {row.slice(1).map((cell, cellIndex) => (\r\n                                    <td key={cellIndex} className={addClassToLastCell && cellIndex === row.length - 2 ? (isDeposited ? \"text-theme3\" : \"text-theme4\") : \"\"}>{cell}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    {/* <td><span className={`text-theme${row[4] === \"INR Deposited\" ? \"4\" : \"3\"}`}>{row[4]}</span></td> */}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,KAAKA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC,kBAAkB,GAAG;AAAK,CAAC,EAAE;EACzD,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAAOQ,SAAS,EAAC,wBAAwB;MAAAD,QAAA,gBACrCP,OAAA;QAAAO,QAAA,eACIP,OAAA;UAAAO,QAAA,EACKH,OAAO,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBX,OAAA;YAAgBY,KAAK,EAAC,KAAK;YAAAL,QAAA,EAAEG;UAAI,GAAxBC,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwB,CACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRhB,OAAA;QAAAO,QAAA,EAqBKF,IAAI,CAACI,GAAG,CAAC,CAACQ,GAAG,EAAEC,QAAQ,KAAK;UACzB,MAAMC,WAAW,GAAGF,GAAG,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,KAAK,eAAe;UAC3D,oBACIpB,OAAA;YAAAO,QAAA,gBACIP,OAAA,CAACF,aAAa;cAACuB,QAAQ,EAAEJ,GAAG,CAAC,CAAC,CAAE;cAACK,QAAQ,EAAEL,GAAG,CAAC,CAAC,CAAE;cAACM,OAAO,EAAC;YAA2B;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACxFC,GAAG,CAACO,KAAK,CAAC,CAAC,CAAC,CAACf,GAAG,CAAC,CAACgB,IAAI,EAAEC,SAAS,kBAC9B1B,OAAA;cAAoBQ,SAAS,EAAEF,kBAAkB,IAAIoB,SAAS,KAAKT,GAAG,CAACG,MAAM,GAAG,CAAC,GAAID,WAAW,GAAG,aAAa,GAAG,aAAa,GAAI,EAAG;cAAAZ,QAAA,EAAEkB;YAAI,GAApIC,SAAS;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgI,CACrJ,CAAC;UAAA,GAJGE,QAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKb,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACV,CAAC;AAEX;AAACW,EAAA,GAhDQxB,KAAK;AAkDd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}